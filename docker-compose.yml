services:
    mosquitto:
        hostname: mosquitto
        container_name: mosquitto
        ports:
            - '1883:1883'
        volumes:
            - ./mqtt/config:/mosquitto/config
            - ./mqtt/log:/mosquitto/log
            - ./mqtt/data:/mosquitto/data
        expose:
            - '1883'
        image: eclipse-mosquitto
        networks:
            sarea1:
                ipv4_address: 172.20.0.10
                
    zookeeper:
        image: zookeeper:3.4.9
        restart: unless-stopped
        hostname: zookeeper
        container_name: zookeeper
        ports:
          - "2181:2181"
        environment:
            ZOO_MY_ID: 1
            ZOO_PORT: 2181
            ZOO_SERVERS: server.1=zookeeper:2888:3888
        volumes:
          - ./zookeeper/data:/data
          - ./zookeeper/datalog:/datalog  
        networks:
            - sarea1          

    kafka:
        image: confluentinc/cp-kafka:5.1.0
        hostname: kafka
        container_name: kafka
        restart: unless-stopped
        ports:
          - "9092:9092"
        environment:
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
          KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
          KAFKA_BROKER_ID: 1
          KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        volumes:
          - ./kafka/data:/var/lib/kafka/data
        depends_on:
          - zookeeper
        networks:
            sarea1:
                ipv4_address: 172.20.0.11
    kafka-connect:
        image: confluentinc/cp-kafka-connect:5.1.0
        hostname: kafka-connect
        restart: unless-stopped
        container_name: kafka-connect
        ports:
          - "8083:8083"
        environment:
          CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
          CONNECT_REST_ADVERTISED_HOST_NAME: connect
          CONNECT_REST_PORT: 8083
          CONNECT_GROUP_ID: compose-connect-group
          CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
          CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
          CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
          CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
          CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
          CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
          CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
          CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
          CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
          CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
          CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars'
          CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
        volumes:
          - ./jars:/etc/kafka-connect/jars
        depends_on:
          - zookeeper
          - kafka
          - mosquitto
        networks:
            - sarea1
          
    publisher:
        hostname: publisher
        container_name: publisher
        build:
            context: .
        depends_on:
            - mosquitto
            - kafka-connect
        networks:
            - sarea1
            
networks:
    sarea1:
        name: sarea1
        ipam:
          config:
            - subnet: 172.20.0.0/16